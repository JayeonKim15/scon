<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scon.project.admin.lecture.model.dao.LectureMapper">

	<resultMap id="lectureResultMap" type="com.scon.project.admin.lecture.model.dto.LectureDTO">
		<id property="no" column="LEC_NO"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="clsId" column="CLS_ID"/>
		<result property="lecPay" column="LEC_PAY"/>
		<result property="lecStatus" column="LEC_STATUS"/>
		<result property="lecDiscount" column="LEC_DISCOUNT"/>
		<result property="lecDelete" column="LEC_DELETE"/>
		<result property="accStatus" column="ACC_STATUS"/>
		<result property="accDate" column="ACC_DATE"/>
		<result property="accOption" column="ACC_OPTION"/>
		
		<association property="member" resultMap="memberResultMap"/>
		<association property="cls" resultMap="classResultMap"/>
		<association property="ref" resultMap="refundResultMap"/>
	</resultMap>
	
	<resultMap id="memberResultMap" type="com.scon.project.member.model.dto.MemberDTO">
		<id property="id" column="MEMBER_ID"/>
		<result property="name" column="MEMBER_NAME"/>
		<result property="pwd" column="MEMBER_PWD"/>
		<result property="tempPwdYN" column="TEMP_PWD_YN"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="birthDay" column="BIRTHDAY"/>
		<result property="address" column="GENDER"/>
		<result property="gender" column="ADDRESS"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="deleteDate" column="DEL_DATE"/>
		<result property="status" column="MEMBER_ST"/>
	</resultMap>
	
	<resultMap id="classResultMap" type="com.scon.project.admin.Class.dto.ClassDTO">
		<id property="clsId" column="CLS_ID"/>
		<result property="clsName" column="CLS_NAME"/>
		<result property="clsSubject" column="CLS_SUBJECT"/>
		<result property="clsStuNum" column="CLS_STUNUM"/>
		<result property="clsGrade" column="CLS_GRADE"/>
		<result property="clsPay" column="CLS_PAY"/>
		<result property="clsRoom" column="CLS_ROOM"/>
		<result property="clsStart" column="CLS_START"/>
		<result property="clsEnd" column="CLS_END"/>
		<result property="clsNote" column="CLS_NOTE"/>
		<result property="clsStatus" column="CLS_STATUS"/>
		
		<association property="member" resultMap="memberResultMap"/>
	</resultMap>
	
	<resultMap id="refundResultMap" type="com.scon.project.admin.lecture.model.dto.RefundDTO">
		<id property="no" column="REF_NO"/>
		<result property="lecNo" column="LEC_NO"/>
		<result property="refPay" column="REF_PAY"/>
		<result property="refDate" column="REF_DATE"/>
		<result property="refContent" column="REF_CONTENT"/>
	</resultMap>
	
	<!-- 수강 내역 조회용 -->
	<select id="selectAllLectureList" resultMap="lectureResultMap">
		SELECT
			   A.LEC_NO
			 , A.LEC_PAY
			 , A.LEC_STATUS
			 , A.ACC_STATUS
			 , A.ACC_DATE
			 , A.ACC_OPTION
			 , B.MEMBER_NAME
			 , C.CLS_ID
             , C.MEMBER_ID
			 , C.CLS_NAME
			 , C.CLS_PAY
			 , C.CLS_START
			 , C.CLS_END
		  FROM TB_LECTURE A
		  JOIN TB_MEMBER B ON(A.MEMBER_ID = B.MEMBER_ID)
		  JOIN TB_CLASS C ON(A.CLS_ID = C.CLS_ID)
		 WHERE A.LEC_DELETE = 'N'
		 ORDER BY A.LEC_NO DESC
	</select>
		
	<!-- 강의 조회용 -->
	<select id="selectAllClassList" resultMap="classResultMap">
		SELECT
			   A.CLS_ID
			 , A.CLS_NAME
			 , A.CLS_SUBJECT
			 , A.CLS_GRADE
			 , A.CLS_PAY
			 , A.CLS_START
			 , A.CLS_END
			 , B.MEMBER_NAME
		  FROM TB_CLASS A
		  JOIN TB_MEMBER B ON(A.MEMBER_ID = B.MEMBER_ID)
		 WHERE CLS_STATUS = 'Y'
	</select>
	
	<!-- 원생 조회용 -->
	<select id="selectAllMemberList" resultMap="memberResultMap">
		SELECT
			   MEMBER_ID
			 , MEMBER_NAME
		  FROM TB_MEMBER
		 WHERE MEMBER_ST = '대기생'
	</select>
	
	<!-- 수강 등록용 -->
	<insert id="insertLecture">
		INSERT
		  INTO TB_LECTURE
		(
		  LEC_NO
		, MEMBER_ID
		, CLS_ID
		, LEC_PAY
		, LEC_STATUS
		, LEC_DISCOUNT
		<if test="accDate != ''">
		, ACC_STATUS
		, ACC_DATE
		, ACC_OPTION
		</if>
		)
		VALUES
		(
		  SEQ_LEC_NO.NEXTVAL
		, #{ memberId }
		, #{ clsId }
		, #{ lecPay }
		, DEFAULT
		, #{ lecDiscount }
		<if test="accDate != ''">
		, '수납'
		, #{ accDate }
		, #{ accOption }
		</if>
		)
	</insert>
	
	<!-- 수강 수정용 - 정보 조회 -->
	<select id="selectLectureDetail" resultMap="lectureResultMap">
		SELECT
			   A.LEC_NO
			 , A.LEC_PAY
			 , A.LEC_STATUS
			 , A.LEC_DISCOUNT
			 , A.LEC_DELETE
			 , A.ACC_STATUS
			 , A.ACC_DATE
			 , A.ACC_OPTION
			 , B.MEMBER_NAME
			 , C.CLS_ID
             , C.MEMBER_ID
			 , C.CLS_NAME
			 , C.CLS_PAY
			 , C.CLS_START
			 , C.CLS_END
		  FROM TB_LECTURE A
		  JOIN TB_MEMBER B ON(A.MEMBER_ID = B.MEMBER_ID)
		  JOIN TB_CLASS C ON(A.CLS_ID = C.CLS_ID)
		 WHERE LEC_NO = #{ no }
		   AND LEC_DELETE = 'N'
	</select>
	
	<!-- 수강 수정용 -->
	<update id="modifyLecture">
		UPDATE
			   TB_LECTURE
		   SET LEC_STATUS = #{ lecStatus }
		     <if test="accDate != ''">
		     , ACC_STATUS = '수납'
		     , ACC_DATE = #{ accDate }
		     , ACC_OPTION = #{ accOption }
		     </if>
		 WHERE LEC_NO = #{ no }
	</update>
	
	<!-- 수강 삭제용 -->
	<update id="deleteLecture">
		UPDATE
			   TB_LECTURE
		   SET LEC_DELETE = 'Y'
		 WHERE LEC_NO = #{ no }
	</update>
	
	<!-- 환불 등록용 -->
	<insert id="insertRefund">
		<selectKey keyProperty="lecNo" order="BEFORE" resultType="_int">
			SELECT
				   SEQ_LEC_NO.CURRVAL
			  FROM TB_LECTURE
		</selectKey>
		INSERT
		  INTO TB_REFUND
		(
		  REF_NO
		, LEC_NO
		, REF_PAY
		, REF_DATE
		, REF_CONTENT
		)
		VALUES
		(
		  SEQ_REF_NO.NEXTVAL
		, #{ lecNo }
		, #{ refPay }
		, #{ refDate }
		, #{ refContent }
		)
	</insert>

</mapper>